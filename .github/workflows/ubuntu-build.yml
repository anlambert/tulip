name: ubuntu-build
on: [push, pull_request]
jobs:
  ubuntu:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Talipot build on Ubuntu 18.04
            os: ubuntu-18.04
          - name: Talipot build on Ubuntu 20.04
            os: ubuntu-20.04
    steps:
      - name: Checkout Talipot code
        uses: actions/checkout@v2
      - if: matrix.config.os == 'ubuntu-20.04'
        name: Add KDE Neon repository to get recent Qt5
        run: |
          wget -qO - http://archive.neon.kde.org/public.key | sudo apt-key add -
          sudo add-apt-repository http://archive.neon.kde.org/user/
      - name: Apt update
        run: sudo apt update
      - name: Install Talipot build dependencies
        run: sudo apt install
          cmake
          ccache
          ninja-build
          libqhull-dev
          libyajl-dev
          libgraphviz-dev
          libpython3-dev
          libcppunit-dev
          binutils-dev
          libzstd-dev
          libgit2-dev
          qt5-default
          libqt5webkit5-dev
          libquazip5-dev
          libglew-dev
          libfreetype6-dev
          libfribidi-dev
          libfontconfig-dev
          python3
          python3-pip
          doxygen
          graphviz
      - if: matrix.config.os == 'ubuntu-18.04'
        name: Install GCC 8 on Ubuntu 18.04
        run: |
          sudo apt install gcc-8 g++-8
          sudo update-alternatives \
            --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 \
            --slave /usr/bin/g++ g++ /usr/bin/g++-8
      - name: Prepare ccache timestamp
        id: get-current-date
        run: |
          echo "::set-output name=date::$(date -u "+%Y-%m-%d-%H-%m-%S")"
        shell: bash
      - name: Cache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ matrix.config.os }}-ccache-${{ steps.get-current-date.outputs.date }}
          restore-keys: |
            ${{ matrix.config.os }}-ccache-
      - name: Create build directory
        run: mkdir build
      - name: Configure Talipot core build with CMake
        working-directory: ./build
        run: cmake .. -G Ninja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=$PWD/install
          -DTALIPOT_BUILD_TESTS=ON
          -DTALIPOT_USE_CCACHE=ON
          -DTALIPOT_BUILD_CORE_ONLY=ON
          -DTALIPOT_BUILD_DOC=OFF
      - name: Talipot core build
        working-directory: ./build
        run: ninja -j4
      - name: Install Talipot core build
        working-directory: ./build
        run: ninja -j4 install
      - name: Run Talipot core build unit tests
        working-directory: ./build
        run: ninja tests
      - name: Install sphinx
        run: sudo pip install sphinx
      - name: Configure Talipot complete build with CMake
        working-directory: ./build
        run: cmake .
          -DTALIPOT_BUILD_CORE_ONLY=OFF
          -DTALIPOT_BUILD_DOC=ON
      - name: Talipot complete build
        working-directory: ./build
        run: ninja -j4
      - name: Install Talipot complete build
        working-directory: ./build
        run: ninja -j4 install
      - name: Run Talipot complete build unit tests
        uses: GabrielBB/xvfb-action@v1
        with:
          working-directory: ./build
          run: ninja tests
